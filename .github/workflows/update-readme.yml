name: Update README with file dates

on:
  schedule:
    - cron: '0 0 * * *'   # 每天凌晨执行
  workflow_dispatch:       # 手动触发
  push:
    branches-ignore: [ gh-pages ]

permissions:
  contents: write  # ✅ 允许推送修改

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true  # ✅ 使用 GITHUB_TOKEN 自动认证

      - name: Detect default branch
        id: branch
        run: |
          DEFAULT_BRANCH=$(git remote show origin | sed -n '/HEAD branch/s/.*: //p')
          echo "branch=$DEFAULT_BRANCH" >> $GITHUB_OUTPUT

      - name: Get last commit dates
        id: getdates
        run: |
          set -e
          # 定义文件路径
          FILE_ALL="HiddifyConfigsCLI/bin/Debug/net8.0/valid_links.txt"
          FILE_01="HiddifyConfigsCLI/bin/Debug/net8.0/valid_links_01.txt"
          FILE_02="HiddifyConfigsCLI/bin/Debug/net8.0/valid_links_02.txt"

          # 检查文件是否存在
          for f in "$FILE_ALL" "$FILE_01" "$FILE_02"; do
            if [ ! -f "$f" ]; then
              echo "⚠️ 文件不存在: $f"
            fi
          done

          # 提取最后提交时间（UTC），并格式化为北京时间 (+8)
          format_date() {
            if git log -1 --format=%ci -- "$1" >/dev/null 2>&1; then
              RAW_DATE=$(git log -1 --format=%ci -- "$1")
              TZ_DATE=$(date -d "$RAW_DATE +8 hours" +"%Y-%m-%d %H:%M:%S +0800")
              echo "$TZ_DATE"
            else
              echo "N/A"
            fi
          }

          echo "ALL=$(format_date "$FILE_ALL")" >> $GITHUB_OUTPUT
          echo "L01=$(format_date "$FILE_01")" >> $GITHUB_OUTPUT
          echo "L02=$(format_date "$FILE_02")" >> $GITHUB_OUTPUT

      - name: Update README.md
        run: |
          sed -i "s|{{DATE_VALID_ALL}}|${{ steps.getdates.outputs.ALL }}|g" README.md
          sed -i "s|{{DATE_VALID_01}}|${{ steps.getdates.outputs.L01 }}|g" README.md
          sed -i "s|{{DATE_VALID_02}}|${{ steps.getdates.outputs.L02 }}|g" README.md

      - name: Commit and push if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # 检查 README 是否修改
          if git diff --quiet README.md; then
            echo "✅ No changes detected in README.md"
          else
            echo "🔄 Changes detected, committing..."
            git add README.md
            git commit -m "Auto update file dates in README [skip ci]"
            
            git pull --rebase origin "${{ steps.branch.outputs.branch }}" || true
            git push origin "${{ steps.branch.outputs.branch }}"
          fi
