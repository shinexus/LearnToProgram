name: Update README Timestamps

on:
  push:
    paths:
      - 'HiddifyConfigsCLI/bin/Debug/net8.0/valid_links.txt'
      - 'HiddifyConfigsCLI/bin/Debug/net8.0/valid_links_01.txt'
      - 'HiddifyConfigsCLI/bin/Debug/net8.0/valid_links_02.txt'
  schedule:
    - cron: '0 20 * * *'
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout with full history
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      - name: Get timestamps
        id: ts
        run: |
          format_time() {
            local f="$1"
            if [ ! -f "$f" ]; then
              echo "1970-01-01 00:00:00"
              return
            fi
            git log -1 --format="%cd" --date=format-local:'%Y-%m-%d %H:%M:%S' "$f" 2>/dev/null || echo "1970-01-01 00:00:00"
          }

          echo "ALL_TIME=$(format_time 'HiddifyConfigsCLI/bin/Debug/net8.0/valid_links.txt') +0800" >> $GITHUB_OUTPUT
          echo "P01_TIME=$(format_time 'HiddifyConfigsCLI/bin/Debug/net8.0/valid_links_01.txt') +0800" >> $GITHUB_OUTPUT
          echo "P02_TIME=$(format_time 'HiddifyConfigsCLI/bin/Debug/net8.0/valid_links_02.txt') +0800" >> $GITHUB_OUTPUT

      - name: Create Perl replacement script
        run: |
          cat > replace_time.pl <<'EOF'
          #!/usr/bin/perl -i
          use strict;
          use warnings;

          my $all = $ENV{ALL_TIME} // "1970-01-01 00:00:00 +0800";
          my $p01 = $ENV{P01_TIME} // "1970-01-01 00:00:00 +0800";
          my $p02 = $ENV{P02_TIME} // "1970-01-01 00:00:00 +0800";

          while (<>) {
            # 匹配 valid_links.txt 行
            if (/valid_links\.txt/) {
              s/(?<=\[Last Updated: )[^]]+(?=\])/\$all/;
            }
            # 匹配 valid_links_01.txt
            if (/valid_links_01\.txt/) {
              s/(?<=\[Last Updated: )[^]]+(?=\])/\$p01/;
            }
            # 匹配 valid_links_02.txt
            if (/valid_links_02\.txt/) {
              s/(?<=\[Last Updated: )[^]]+(?=\])/\$p02/;
            }
            print;
          }
          EOF
          chmod +x replace_time.pl

      - name: Replace time inside []
        env:
          ALL_TIME: ${{ steps.ts.outputs.ALL_TIME }}
          P01_TIME: ${{ steps.ts.outputs.P01_TIME }}
          P02_TIME: ${{ steps.ts.outputs.P02_TIME }}
        run: |
          ./replace_time.pl README.md

          echo "=== Updated timestamps ==="
          grep "Last Updated" README.md || true

      - name: Commit if changed402
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          if [[ "${{ github.event_name }}" == "push" ]]; then
            if git diff --quiet HEAD~1 -- HiddifyConfigsCLI/bin/Debug/net8.0/valid_links*.txt 2>/dev/null; then
              echo "No source change → skip"
              exit 0
            fi
          fi

          git add README.md
          if git diff --quiet --staged; then
            echo "README unchanged → skip"
            exit 0
          fi

          git commit -m "chore: update timestamps [skip ci]"
          git push
